name: Docker Image CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get version from package.json
        uses: tyankatsu0105/read-package-version-actions@v1
        id: appversion

      - name: Show version number
        run: echo "Version is ${{ steps.appversion.outputs.version }}"

      # - name: NPM Test
      #   run: |
      #     npm start
      #     npm test

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USERNAME}}/hello-world-js:${{steps.appversion.outputs.version}}

      - name: Push the tagged Docker image
        run: docker push ${{secrets.DOCKER_USERNAME}}/hello-world-js:${{steps.appversion.outputs.version}}

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.4.3
        with:
          minikube version: "v1.25.1"
          kubernetes version: "v1.23.4"
          # github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Sleep for 20 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: "20s"
      - name: Interact with the cluster
        run: |
          kubectl get nodes
          kubectl get po -A
      - name: Update the deploy1.yaml with new Image
        run: |
          sed -e "s/tag/${{steps.appversion.outputs.version}}/g" ./k8s-resources/deploy1.yaml > ./k8s-resources/deploy1-upd.yaml
      - name: Deployment to minikube cluster
        run: kubectl apply -f ./k8s-resources/deploy1-upd.yaml

      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: "10s"

      - name: Check hello-world-svc
        run: |
          kubectl get svc -o wide
          kubectl get ep -o wide

      # - name: test hello-world
      #   run: |
      #     curl $(kubectl get svc hello-world-svc -o jsonpath='{.spec.clusterIP}'): $(kubectl get svc hello-world-svc -o jsonpath='{.spec.ports[0].port}')
